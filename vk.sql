-- MySQL Script generated by MySQL Workbench
-- Вт 08 дек 2020 21:37:35
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema vk
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema vk
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vk` DEFAULT CHARACTER SET utf8 ;
USE `vk` ;

-- -----------------------------------------------------
-- Table `vk`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(145) NOT NULL COMMENT 'имя',
  `surname` VARCHAR(45) NOT NULL COMMENT 'фамилия',
  `email` VARCHAR(245) NOT NULL,
  `phone` BIGINT(12) NOT NULL,
  `password_hash` CHAR(65) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`media_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`media_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`media` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `users_id` INT UNSIGNED NOT NULL,
  `media_types_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `url` VARCHAR(45) NULL DEFAULT NULL COMMENT '/file/file.jpg',
  `size` BIGINT NOT NULL DEFAULT 0,
  `blob` BLOB NULL DEFAULT NULL,
  `metadata` JSON NULL COMMENT 'проверяет соответствие типу json {key:value}',
  PRIMARY KEY (`id`),
  INDEX `fk_media_users1_idx` (`users_id` ASC),
  INDEX `fk_media_media_types1_idx` (`media_types_id` ASC),
  CONSTRAINT `fk_media_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_media_media_types1`
    FOREIGN KEY (`media_types_id`)
    REFERENCES `vk`.`media_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`profiles` (
  `users_id` INT UNSIGNED NOT NULL,
  `gender` ENUM('m', 'f', 'x') NOT NULL,
  `birthday` DATE NOT NULL,
  `address` VARCHAR(245) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  `profile_photo_id` INT UNSIGNED NOT NULL,
  INDEX `fk_profiles_users_idx` (`users_id` ASC),
  PRIMARY KEY (`users_id`),
  INDEX `fk_profiles_media1_idx` (`profile_photo_id` ASC),
  CONSTRAINT `fk_profiles_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profiles_media1`
    FOREIGN KEY (`profile_photo_id`)
    REFERENCES `vk`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`friend_requests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`friend_requests` (
  `from_users_id` INT UNSIGNED NOT NULL,
  `to_users_id` INT UNSIGNED NOT NULL,
  `status` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '-1 - отклонён\n0 - запрос\n1 - принят',
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `updated_at` DATETIME NULL DEFAULT NULL,
  INDEX `fk_friend_requests_users1_idx` (`from_users_id` ASC),
  INDEX `fk_friend_requests_users2_idx` (`to_users_id` ASC),
  PRIMARY KEY (`to_users_id`, `from_users_id`),
  CONSTRAINT `fk_friend_requests_users1`
    FOREIGN KEY (`from_users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_requests_users2`
    FOREIGN KEY (`to_users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`messages` (
  ` id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `from_users_id` INT UNSIGNED NOT NULL,
  `to_users_id` INT UNSIGNED NOT NULL,
  `text` VARCHAR(245) NULL DEFAULT NULL,
  `created_at` DATETIME NOT NULL DEFAULT NOW(),
  `deleted_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (` id`),
  INDEX `from_users_idx` (`from_users_id` ASC),
  INDEX `to_users_idx` (`to_users_id` ASC),
  CONSTRAINT `fk_messages_users_from`
    FOREIGN KEY (`from_users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages_users_to`
    FOREIGN KEY (`to_users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`communities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`communities` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(145) NOT NULL,
  `description` VARCHAR(245) NULL DEFAULT NULL,
  `admin_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_communities_users1_idx` (`admin_id` ASC),
  CONSTRAINT `fk_communities_users1`
    FOREIGN KEY (`admin_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`users_communities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`users_communities` (
  `communities_id` INT UNSIGNED NOT NULL,
  `users_id` INT UNSIGNED NOT NULL,
  INDEX `fk_users_communities_communities1_idx` (`communities_id` ASC),
  INDEX `fk_users_communities_users1_idx` (`users_id` ASC),
  PRIMARY KEY (`communities_id`, `users_id`),
  CONSTRAINT `fk_users_communities_communities1`
    FOREIGN KEY (`communities_id`)
    REFERENCES `vk`.`communities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_communities_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`posts` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `communities_id` INT UNSIGNED NULL DEFAULT NULL,
  `users_id` INT UNSIGNED NOT NULL,
  `text` TEXT NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NOW(),
  PRIMARY KEY (`id`),
  INDEX `fk_posts_users1_idx` (`users_id` ASC),
  INDEX `fk_posts_communities1_idx` (`communities_id` ASC),
  CONSTRAINT `fk_posts_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_posts_communities1`
    FOREIGN KEY (`communities_id`)
    REFERENCES `vk`.`communities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`users_media_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`users_media_likes` (
  `liked_media_id` INT UNSIGNED NOT NULL,
  `liked_by_id` INT UNSIGNED NOT NULL,
  INDEX `fk_users_media_likes_media1_idx` (`liked_media_id` ASC),
  INDEX `fk_users_media_likes_users1_idx` (`liked_by_id` ASC),
  PRIMARY KEY (`liked_media_id`, `liked_by_id`),
  CONSTRAINT `fk_users_media_likes_media1`
    FOREIGN KEY (`liked_media_id`)
    REFERENCES `vk`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_media_likes_users1`
    FOREIGN KEY (`liked_by_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `vk`.`users_posts_likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vk`.`users_posts_likes` (
  `posts_id` INT UNSIGNED NOT NULL,
  `users_id` INT UNSIGNED NOT NULL,
  INDEX `fk_users_posts_likes_posts1_idx` (`posts_id` ASC),
  INDEX `fk_users_posts_likes_users1_idx` (`users_id` ASC),
  PRIMARY KEY (`posts_id`, `users_id`),
  CONSTRAINT `fk_users_posts_likes_posts1`
    FOREIGN KEY (`posts_id`)
    REFERENCES `vk`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_posts_likes_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
